name: Continous deployment for assetbundler
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2-beta
        with:
          go-version: '^1.13.1'
      - name: Build for OSX
        run: |
          go build -o libassetbundler.dylib -buildmode=c-shared ./pkg/assetbundler
          zip assetbundler_macos.zip libassetbundler.dylib libassetbundler.h
      - uses: actions/upload-artifact@v1
        with: 
          name: assetbundler_macos
          path: ./assetbundler_macos.zip
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2-beta
        with:
          go-version: '^1.13.1'
      - name: Build for Windows
        run:  |
          go build -o libassetbundler_x64.dll -buildmode=c-shared ./pkg/assetbundler
          set GOARCH=386
          go build -o libassetbundler_x86.dll -buildmode=c-shared ./pkg/assetbundler
      - name: Archive Windows binaries
        run: Compress-Archive -Path .\libassetbundler_x64.dll, .\libassetbundler_x86.dll, .\libassetbundler_x64.h, .\libassetbundler_x86.h -DestinationPath assetbundler_windows.zip
      - uses: actions/upload-artifact@v1
        with: 
          name: assetbundler_windows
          path: ./assetbundler_windows.zip
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2-beta
        with:
          go-version: '^1.13.1'
      - name: Build for Ubuntu
        run: |
          go build -o libassetbundler.so -buildmode=c-shared ./pkg/assetbundler
          zip assetbundler_ubuntu.zip libassetbundler.so libassetbundler.h
      - uses: actions/upload-artifact@v1
        with: 
          name: assetbundler_ubuntu
          path: ./assetbundler_ubuntu.zip
  release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows, build-ubuntu]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: assetbundler_macos
      - uses: actions/download-artifact@v1
        with:
          name: assetbundler_windows
      - uses: actions/download-artifact@v1
        with:
          name: assetbundler_ubuntu
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload OSX library
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assetbundler_macos/assetbundler_macos.zip
          asset_name: assetbundler_macos.zip
          asset_content_type: application/zip
      - name: Upload Windows library
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assetbundler_windows/assetbundler_windows.zip
          asset_name: assetbundler_windows.zip
          asset_content_type: application/zip
      - name: Upload Ubuntu library
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assetbundler_ubuntu/assetbundler_ubuntu.zip
          asset_name: assetbundler_ubuntu.zip
          asset_content_type: application/zip
